name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
       postgres:
        image: postgres:16.3
        env:
          POSTGRES_DB: myapp_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3

    - name: Load environment variables from .env.test
      run: echo "AWS_ACCESS_KEY_ID=dummy_access_key" >> $GITHUB_ENV && echo "AWS_SECRET_ACCESS_KEY=dummy_secret_key" >> $GITHUB_ENV && echo "S3_BUCKET=dummy_bucket" >> $GITHUB_ENV && echo "ENCRYPTION_KEY=$(ruby -r securerandom -e 'puts SecureRandom.hex(16)')" >> $GITHUB_ENV 

    - name: Debug environment variables
      run: echo "ENCRYPTION_KEY=${ENCRYPTION_KEY}"


    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.2.3

    - name: Install dependencies
      run: |
        gem install bundler
        bundle install
        yarn install
# デバッグ作成されてから接続されてるかの確認
    # - name: Wait for PostgreSQL to be ready
    #   run: |
    #     until pg_isready -h db -U postgres; do
    #       echo "Waiting for database..."
    #       sleep 1
    #     done
#traceで詳細なログを確認
    - name: Setup database
      run: |
        cp config/database.yml.ci config/database.yml
        bin/rails db:create RAILS_ENV=test
        bin/rails db:schema:load RAILS_ENV=test
        bin/rails db:migrate RAILS_ENV=test

    - name: Run tests
      run: |
        bundle exec rspec

  deploy:
    needs: test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Deploy to Render
      env:
        RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
        RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
      run: |
        curl -X POST \
          -H "Accept: application/json" \
          -H "Authorization: Bearer $RENDER_API_KEY" \
          https://api.render.com/v1/services/$RENDER_SERVICE_ID/deploys
